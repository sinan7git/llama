# Generated by Django 4.2.13 on 2024-07-04 07:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('code', models.CharField(editable=False, max_length=50)),
                ('avatar', models.ImageField(default='normal/avatars/default.png', upload_to='normal/avatars/%y/%m/%d/')),
                ('mobile_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Enter valid phone number', regex='^\\D?(\\d{0,3}?)\\D{0,2}(\\d{3})?\\D{0,2}(\\d{3})\\D?(\\d{4})$')])),
                ('password_changed_on', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('password_changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='password_changed_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('access_crm', 'Permission to view crm module'), ('access_hrms', 'Permission to view hrms module'), ('access_pdm', 'Permission to view pdm module'), ('access_mes', 'Permission to view mes module'), ('access_reports', 'Permission to view reports module'), ('access_erp', 'Permission to view erp module'), ('access_qaqc', 'Permission to view qaqc module'), ('access_employee_cost', 'Permission to view Employee Cost Module'), ('access_opportunities', 'Permission to view Opportunities'), ('access_overtime_supervisor', 'Permission to view Overtime for Supervisors Only'), ('access_job_planning', 'Permission to view Job Planning'), ('access_cr', 'Permission to view CR Module'), ('access_job', 'Permission to view Job Module'), ('access_ncr', 'Permission to view ncr module'), ('access_near_miss_report', 'permissions to view near miss reports'), ('access_incident_report', 'permissions to view incident reports'), ('can_access_contact', 'permissions to view contacts'), ('can_access_crm_company', 'Can view crm company'), ('access_hod_portal', 'Can access HOD portal'), ('access_hcap_payroll', 'Can access HCAP payroll'), ('access_hcap_documents', 'Can access HCAP documents'), ('access_view_salary', 'Can View Salary'), ('access_company_policy', 'Can View Company Policy'), ('access_hcap_accounts', 'Permission to view HCAP Accounts'), ('access_supplier_evaluation', 'Permission to view Supplier Evaluation Module'), ('access_agency_evaluation', 'Permission to view Agency Evaluation Module'), ('access_supplier_opportunities', 'Permission to view Supplier Opportunities'), ('full_access_to_view_sales_order', 'Permission to view Sales Order with Full access'), ('can_access_projects', 'permissions to view projects'), ('can_access_office_directory', 'permissions to view office directory'), ('can_access_marketing', 'permissions to view marketing'), ('all_approvals', 'permissions to view all approvals'), ('can_access_workforce_planning', 'permissions to view workforce planning'), ('access_recruitment', 'permissions to view Recruitment'), ('add_only_crm_users', 'permissions to add only CRM users'), ('view_management_goals', 'permissions to view management goals'), ('pr_sent_for_approve', 'Permission to send manual purchase for review'), ('view_all_opportunities', 'Permission to View All Opportunities'), ('view_all_requesition', 'Permission to View All Requisition'), ('approve_work_order', 'Can Approve Work Orders'), ('revise_work_order', 'Can Revise Work Orders'), ('view_pending_work_order', 'Can View Pending Work Order'), ('send_work_order_for_approval', 'Can Send Work Order for Approval'), ('can_view_generic_quotes', 'permissions to view Quotes module'), ('can_view_margin_calculations', 'Permissions to view Margin Calculation'), ('can_view_invoice_status_report', 'Permissions to view Invoice Status Report'), ('access_complaint_portal', 'Can access complaint portal'), ('view_open_opportunities', 'Permission to View All Open Opportunities'), ('view_all_teams', 'Permission to View All Teams Activities')),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('hod', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams_hod', to=settings.AUTH_USER_MODEL)),
                ('in_charge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_in_charge', to=settings.AUTH_USER_MODEL)),
                ('super_visor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_super_visor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='userprofile',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teams', to='crm.team', verbose_name='Section'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
